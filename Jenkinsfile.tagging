pipeline{
  
  agent{
    kubernetes{
      yaml """
apiVersion: v1
kind: Pod
spec:
 container:
 - name: docker
   image: docker:20.10.3-dind
   command:
   - dockerd
   - --host:unix:///var/run/docker.sock
   - --host=tcp://0.0.0.0:2375
   - --storage-driver=overlay2
   tty: true
   securityContext:
    privileged: true
 - name: git
   image: alpine/git:v2.30.0
   command:
   - cat
   tty: true
"""
    }
  }

  stages{
    stage('Clone ratings source code'){
			steps{
				container('jnlp'){
					script{
						scmVars = git branch: '${BRANCH_NAME}',
													credentialsId: 'bookinfo-git-deploy-key',
													url: 'git@github.com:NattaphonMek/sitkmutt-bookinfo-ratings.git'
					}// End Script
				}// End Container
			}// End Step
		}// End Stage

    stage('Tag Docker Image'){
      steps{
        container('docker'){
          script{
            docker.withRegistry('https://ghcr.io','registry-bookinfo'){
							uatImage = docker.image(")
              uatImage.pull("ghcr.io/nattaphonmek/bookinfo-ratings:uat")
              uatImage.push("build-${BUILD_NUMBER}")
						}// End docker.withRegistry
          }
        }
      }
    }

    stage('Git tag'){
      steps{
        container('git'){
          script{
            sshagent(credentials:['bookinfo-git-deploy-key']){
              sh """
                GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" \
                git push --tags
              """
            }
          }
        }
      }
    }

  }

}