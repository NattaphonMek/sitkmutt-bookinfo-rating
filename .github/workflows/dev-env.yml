name: dev-env
on:
  push:
    branches:
      - dev
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/nattaphonmek/bookinfo-ratings:dev
    
  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:          
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Google auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Use Gcloud Cli  
        run: |
          gcloud info  
          gcloud auth list  

      # - name: Get-credentials
      #   uses: google-github-actions/get-gke-credentials@main
      #   with:
      #     cluster_name: opsta-bootcamp
      #     location: asia-southeast2-c

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # - name: Deploy
      #   run: |
      #     gcloud container clusters get-credentials opsta-bootcamp \
      #       --zone asia-southeast2-c \ 
      #       --project planar-ripsaw-342917
      #     # helm upgrade $GKE_PROJECT $GKE_PROJECT-cluster/ \
      #     #   --set randocats.image.tag=$GITHUB_SHA \
      #     #   --wait
      #     # kubectl rollout status deployment/$DEPLOYMENT_NAME
      #     # kubectl get services -o wide
      # - name: deploy
      #   uses: deliverybot/helm@v1.5.0
      #   with:
      #     token: ${{ secrets.TOKEN }}
      #     helm: helm
      #     release: bookinfo-dev-ratings
      #     namespace: bookinfo-dev
      #     chart: k8s/helm
      #     value-files: k8s/helm-values/values-bookinfo-dev-ratings.yaml
      #     values: |
      #       {
      #         "extraEnv": {
      #           "COMMIT_SHA": "${{ github.sha }}"
      #         }
      #       }
      #   env:
      #     KUBECONFIG_FILE: '${{ secrets.GCP_CREDENTIALS }}'

  test:
    needs: deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Acceptance test 
        run: curl https://dev.parfet.in.th/ratings/health | grep "Ratings is good" 

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Anchore Scan
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: "ghcr.io/nattaphonmek/bookinfo-ratings:dev"
          fail-build: false
          acs-report-enable: true
      
      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: ${{ github.event.repository.name }}
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports


