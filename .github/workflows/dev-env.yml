name: dev-env
on:
  push:
    branches:
      - dev
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/nattaphonmek/bookinfo-ratings:dev
    
  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: google auth
      #   uses: google-github-actions/auth@v0
      #   with:
      #     creadentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: get-credentials
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: opsta-bootcamp
          location: asia-southeast2-c
          credentials: ${{ secrets.GCP_CREDENTIALS }}

      - name: deploy
        uses: deliverybot/helm@master
        with:
          token: ${{ secrets.TOKEN }}
          helm: helm3
          release: bookinfo-dev-ratings
          namespace: bookinfo-dev
          chart: k8s/helm
          value-files: k8s/helm-values/values-bookinfo-dev-ratings.yaml
          values: |
            {
              "extraEnv": {
                "COMMIT_SHA": "${{ github.sha }}"
              }
            }
        env:
          KUBECONFIG_FILE: '${{ secrets.GCP_CREDENTIALS }}'

  # test:
  #   needs: deploy
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Acceptance test 
  #       run: curl http://sitkmutt.bookinfo.dev.opsta.net/student8/ratings/health | grep "Ratings is good" 

  #     - name: SonarCloud Scan
  #       uses: sonarsource/sonarcloud-github-action@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
  #     - name: anchore/scan-actions@v3
  #       id: scan
  #       with:
  #         image: "ghcr.io/nattaphonmek/bookinfo-ratings:"
  #         acs-report-enable: true
      
  #     - name: upload Anchore scan SARIF report
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: ${{ steps.scan.outputs.sarif }}

  #     - name: OWASP ZAP scan
  #       uses: zaproxy/action-baseline@v0.2.0
  #       with:
  #         token: ${{ secrets.TOKEN }}
  #         target: 'https://dev.parfet.in.th/ratings'


